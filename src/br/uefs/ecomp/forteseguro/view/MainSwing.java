/**
 * Componente Curricular: Módulo Integrado de Programação II
 * Autores: <Kevin Cerqueira Gomes e Allan Capistrano de Santana Santos>
 * Data: <06/09/2019>
 *
 * Declaro que este código foi elaborado por nós de forma individual e não
 * contém nenhum trecho de código de outro colega ou de outro autor, tais como
 * provindos de livros e apostilas, e páginas ou documentos eletrônicos da
 * Internet. Qualquer trecho de código de outra autoria que uma citação para o
 * não a minha está destacado com autor e a fonte do código, e estou ciente que
 * estes trechos não serão considerados para fins de avaliação. Alguns trechos
 * do código podem coincidir com de outros colegas pois estes foram discutidos
 * em sessões tutorias.
 */
package br.uefs.ecomp.forteseguro.view;

import br.uefs.ecomp.forteseguro.controller.Controller;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Classe responsável pela interface gráfica do programa.
 *
 * @author Kevin Cerqueira
 * @author Allan Capistrano
 */
public class MainSwing extends javax.swing.JFrame {

    private Controller controller; // Controlador da classe.
    private String arquivoGrafos; // Nome do arquivo padrão de leitura dos vertíces e arestas.

    // Lista usada para capturar os pontos de ligação que o usuario inserir no
    // momento de cadastro de pontos.
    private List<String> listaLigacoes;

    // Lista usada para capturar os pesos de ligação que o usuario inserir no
    // momento de cadastro de pontos.
    private List<Integer> pesoLigacoes;

    // Variável de controle, usada para informar qual a situação do
    // estacionamento, se ele está presente ou foi removido.
    private boolean situacaoEstacionamento;
    private boolean situacaoBanco;
    private boolean situacaoColeta;

    // Variável de controle, usada para informar se o programa está pronto para
    // fazer determinadas atualizações, como: carregar pontos nas combo box.
    private boolean programaPronto;

    private boolean nenhumPonto;

    /**
     * Construtor da classe. Inicializa as variáveis.
     */
    public MainSwing() {
        this.controller = new Controller();
        this.arquivoGrafos = "grafos.txt";
        this.listaLigacoes = new ArrayList<>();
        this.pesoLigacoes = new ArrayList<>();
        this.situacaoEstacionamento = false;
        this.situacaoBanco = false;
        this.situacaoColeta = false;
        this.programaPronto = false;
        this.nenhumPonto = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel2 = new javax.swing.JPanel();
        tabbedPaneInicial = new javax.swing.JTabbedPane();
        panelCadastrar = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        cadastrarLabelNomeVertice = new javax.swing.JLabel();
        cadastrarCampoNomeVertice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cadastrarComboBoxTipoPonto = new javax.swing.JComboBox<>();
        cadastrarButtonCadastrar = new javax.swing.JButton();
        cadastrarLabelPrincipal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cadastrarLabelLogInsercao = new javax.swing.JLabel();
        cadastrarPanelLigacoesPontos = new javax.swing.JPanel();
        cadastrarComboBoxLigacoesPonto = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cadastrarButtonAdicionarLigacao = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        cadastrarCampoPeso = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cadastrarCampoCoordenadaY = new javax.swing.JTextField();
        cadastrarCampoCoordenadaX = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        panelRemover = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        removerComboBoxPontos = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        removerComboBoxLigacoes1 = new javax.swing.JComboBox<>();
        removerButtonRemoverLigacao = new javax.swing.JButton();
        removerButtonRemoverPonto = new javax.swing.JButton();
        removerLabelLogRemocao = new javax.swing.JLabel();
        removerComboBoxLigacoes2 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        panelCalcular = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        calcularComboBoxLugarColeta = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        calcularComboBoxBanco = new javax.swing.JComboBox<>();
        calcularPainelPrincipal = new javax.swing.JPanel();
        calcularButtonCalcular = new javax.swing.JButton();
        calcularProgressBar = new javax.swing.JProgressBar();
        calculaLabelEstacionamento = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        calcularTextMenorCaminho = new javax.swing.JTextArea();
        panelAlterar = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        alterarComboBoxAlterarPara = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        alterarComboBoxEscolhaPonto = new javax.swing.JComboBox<>();
        alterarButtonAlterar = new javax.swing.JToggleButton();
        alterarLabelLogAlteracao = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        inicialMenuInicial = new javax.swing.JMenu();
        menuAlterarArquivo = new javax.swing.JMenuItem();
        menuAtualizaPaineis = new javax.swing.JMenuItem();
        menuTemaEscuro = new javax.swing.JCheckBoxMenuItem();
        inicialMenuSobre = new javax.swing.JMenu();

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Forte Seguro");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabbedPaneInicial.setBackground(new java.awt.Color(255, 255, 255));

        panelCadastrar.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(30, 144, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cadastrarLabelNomeVertice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cadastrarLabelNomeVertice.setForeground(new java.awt.Color(255, 255, 255));
        cadastrarLabelNomeVertice.setText("Nome do novo ponto:");

        cadastrarCampoNomeVertice.setToolTipText("<html>Caso o nome seja composto, utilizar underline para separar as palavras <br><strong>Ex: Feira_de_Santana");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tipo de ponto:");

        cadastrarComboBoxTipoPonto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cruzamento", "Banco", "Ponto de Coleta" }));

        cadastrarButtonCadastrar.setBackground(new java.awt.Color(255, 255, 255));
        cadastrarButtonCadastrar.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        cadastrarButtonCadastrar.setText("CADASTRAR PONTO");
        cadastrarButtonCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrarButtonCadastrarMouseClicked(evt);
            }
        });

        cadastrarLabelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        cadastrarLabelPrincipal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cadastrarLabelPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        cadastrarLabelPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadastrarLabelPrincipal.setText("Cadastramento de pontos e ligações");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/uefs/ecomp/forteseguro/view/forte_seguro_logo.png"))); // NOI18N

        cadastrarLabelLogInsercao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cadastrarLabelLogInsercao.setForeground(new java.awt.Color(255, 255, 255));
        cadastrarLabelLogInsercao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadastrarLabelLogInsercao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log da inserção", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        cadastrarPanelLigacoesPontos.setBackground(new java.awt.Color(30, 144, 255));
        cadastrarPanelLigacoesPontos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ligações entre pontos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        cadastrarPanelLigacoesPontos.setForeground(new java.awt.Color(255, 255, 255));

        cadastrarComboBoxLigacoesPonto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ponto:");

        cadastrarButtonAdicionarLigacao.setBackground(new java.awt.Color(255, 255, 255));
        cadastrarButtonAdicionarLigacao.setText("Adicionar ligação");
        cadastrarButtonAdicionarLigacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrarButtonAdicionarLigacaoMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Peso:");

        cadastrarCampoPeso.setToolTipText("Apenas números inteiros");

        javax.swing.GroupLayout cadastrarPanelLigacoesPontosLayout = new javax.swing.GroupLayout(cadastrarPanelLigacoesPontos);
        cadastrarPanelLigacoesPontos.setLayout(cadastrarPanelLigacoesPontosLayout);
        cadastrarPanelLigacoesPontosLayout.setHorizontalGroup(
            cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarPanelLigacoesPontosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastrarButtonAdicionarLigacao, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addGroup(cadastrarPanelLigacoesPontosLayout.createSequentialGroup()
                        .addGroup(cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cadastrarComboBoxLigacoesPonto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cadastrarCampoPeso))))
                .addContainerGap())
        );
        cadastrarPanelLigacoesPontosLayout.setVerticalGroup(
            cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarPanelLigacoesPontosLayout.createSequentialGroup()
                .addGroup(cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cadastrarComboBoxLigacoesPonto, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(cadastrarPanelLigacoesPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cadastrarCampoPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cadastrarButtonAdicionarLigacao, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Coordenada (X,Y) do ponto:");

        cadastrarCampoCoordenadaY.setToolTipText("Apenas números inteiros");

        cadastrarCampoCoordenadaX.setToolTipText("Apenas números inteiros");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("X:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Y:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastrarLabelLogInsercao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cadastrarLabelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(cadastrarLabelNomeVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(cadastrarCampoNomeVertice)
                                    .addGap(24, 24, 24)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(cadastrarPanelLigacoesPontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cadastrarButtonCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cadastrarComboBoxTipoPonto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cadastrarCampoCoordenadaX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cadastrarCampoCoordenadaY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(34, 34, 34))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cadastrarLabelPrincipal)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(cadastrarCampoNomeVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cadastrarLabelNomeVertice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cadastrarComboBoxTipoPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cadastrarCampoCoordenadaY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cadastrarCampoCoordenadaX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addComponent(cadastrarButtonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addComponent(cadastrarPanelLigacoesPontos, javax.swing.GroupLayout.PREFERRED_SIZE, 125, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadastrarLabelLogInsercao, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelCadastrarLayout = new javax.swing.GroupLayout(panelCadastrar);
        panelCadastrar.setLayout(panelCadastrarLayout);
        panelCadastrarLayout.setHorizontalGroup(
            panelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCadastrarLayout.setVerticalGroup(
            panelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneInicial.addTab("Cadastrar", panelCadastrar);

        panelRemover.setBackground(new java.awt.Color(255, 255, 255));
        panelRemover.setPreferredSize(new java.awt.Dimension(630, 300));

        jPanel8.setBackground(new java.awt.Color(30, 144, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.setPreferredSize(new java.awt.Dimension(460, 360));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Remover ponto");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText(" Selecione o ponto: ");

        removerComboBoxPontos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Remover ligação");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(" Selecione a ligação: ");

        removerComboBoxLigacoes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        removerComboBoxLigacoes1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                removerComboBoxLigacoes1ItemStateChanged(evt);
            }
        });

        removerButtonRemoverLigacao.setBackground(new java.awt.Color(255, 255, 255));
        removerButtonRemoverLigacao.setText("REMOVER LIGAÇÃO");
        removerButtonRemoverLigacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removerButtonRemoverLigacaoMouseClicked(evt);
            }
        });

        removerButtonRemoverPonto.setBackground(new java.awt.Color(255, 255, 255));
        removerButtonRemoverPonto.setText("REMOVER PONTO");
        removerButtonRemoverPonto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removerButtonRemoverPontoMouseClicked(evt);
            }
        });

        removerLabelLogRemocao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        removerLabelLogRemocao.setForeground(new java.awt.Color(255, 255, 255));
        removerLabelLogRemocao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removerLabelLogRemocao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log da remoção", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        removerComboBoxLigacoes2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("-");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removerButtonRemoverPonto, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(removerComboBoxPontos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removerButtonRemoverLigacao, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addComponent(removerComboBoxLigacoes1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removerComboBoxLigacoes2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(removerLabelLogRemocao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removerComboBoxLigacoes1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removerComboBoxLigacoes2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addComponent(removerButtonRemoverLigacao, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removerComboBoxPontos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removerButtonRemoverPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removerLabelLogRemocao, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelRemoverLayout = new javax.swing.GroupLayout(panelRemover);
        panelRemover.setLayout(panelRemoverLayout);
        panelRemoverLayout.setHorizontalGroup(
            panelRemoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRemoverLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        panelRemoverLayout.setVerticalGroup(
            panelRemoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRemoverLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        tabbedPaneInicial.addTab("Remover pontos e/ou ligações", panelRemover);

        panelCalcular.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(30, 144, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_vermelho.png"))); // NOI18N
        jLabel7.setText("Lugar de Coleta: ");

        calcularComboBoxLugarColeta.setForeground(new java.awt.Color(255, 255, 255));
        calcularComboBoxLugarColeta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_roxo.png"))); // NOI18N
        jLabel8.setText("Banco:");

        calcularComboBoxBanco.setForeground(new java.awt.Color(255, 255, 255));
        calcularComboBoxBanco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        calcularPainelPrincipal.setBackground(new java.awt.Color(135, 206, 250));
        calcularPainelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rotas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        javax.swing.GroupLayout calcularPainelPrincipalLayout = new javax.swing.GroupLayout(calcularPainelPrincipal);
        calcularPainelPrincipal.setLayout(calcularPainelPrincipalLayout);
        calcularPainelPrincipalLayout.setHorizontalGroup(
            calcularPainelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );
        calcularPainelPrincipalLayout.setVerticalGroup(
            calcularPainelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        calcularButtonCalcular.setBackground(new java.awt.Color(255, 255, 255));
        calcularButtonCalcular.setText("Calcular");
        calcularButtonCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calcularButtonCalcularMouseClicked(evt);
            }
        });

        calcularProgressBar.setStringPainted(true);

        calculaLabelEstacionamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        calculaLabelEstacionamento.setForeground(new java.awt.Color(255, 255, 255));
        calculaLabelEstacionamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        calculaLabelEstacionamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_preto.png"))); // NOI18N
        calculaLabelEstacionamento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        calculaLabelEstacionamento.setMinimumSize(new java.awt.Dimension(28, 20));
        calculaLabelEstacionamento.setPreferredSize(new java.awt.Dimension(28, 20));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Estacionamento:");

        calcularTextMenorCaminho.setEditable(false);
        calcularTextMenorCaminho.setBackground(new java.awt.Color(30, 144, 255));
        calcularTextMenorCaminho.setColumns(10);
        calcularTextMenorCaminho.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        calcularTextMenorCaminho.setForeground(new java.awt.Color(255, 255, 255));
        calcularTextMenorCaminho.setLineWrap(true);
        calcularTextMenorCaminho.setRows(5);
        calcularTextMenorCaminho.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menor Caminho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane3.setViewportView(calcularTextMenorCaminho);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calcularComboBoxLugarColeta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(calcularComboBoxBanco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(calcularButtonCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(calcularProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(calculaLabelEstacionamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calcularPainelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcularComboBoxLugarColeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcularComboBoxBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculaLabelEstacionamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcularButtonCalcular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcularProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(calcularPainelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelCalcularLayout = new javax.swing.GroupLayout(panelCalcular);
        panelCalcular.setLayout(panelCalcularLayout);
        panelCalcularLayout.setHorizontalGroup(
            panelCalcularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCalcularLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCalcularLayout.setVerticalGroup(
            panelCalcularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCalcularLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        tabbedPaneInicial.addTab("Calcular Caminho", panelCalcular);

        panelAlterar.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(30, 144, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Alterar para:");

        alterarComboBoxAlterarPara.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cruzamento", "Banco", "Ponto de coleta", "Estacionamento" }));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Escolha o ponto que deseja alterar:");

        alterarComboBoxEscolhaPonto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        alterarButtonAlterar.setBackground(new java.awt.Color(255, 255, 255));
        alterarButtonAlterar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alterarButtonAlterar.setText("ALTERAR");
        alterarButtonAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alterarButtonAlterarMouseClicked(evt);
            }
        });

        alterarLabelLogAlteracao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        alterarLabelLogAlteracao.setForeground(new java.awt.Color(255, 255, 255));
        alterarLabelLogAlteracao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        alterarLabelLogAlteracao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log de alteração", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(alterarButtonAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alterarComboBoxAlterarPara, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alterarComboBoxEscolhaPonto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(133, 133, 133))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(alterarLabelLogAlteracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterarComboBoxEscolhaPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterarComboBoxAlterarPara, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alterarButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterarLabelLogAlteracao, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelAlterarLayout = new javax.swing.GroupLayout(panelAlterar);
        panelAlterar.setLayout(panelAlterarLayout);
        panelAlterarLayout.setHorizontalGroup(
            panelAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlterarLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );
        panelAlterarLayout.setVerticalGroup(
            panelAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAlterarLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        tabbedPaneInicial.addTab("Alterar Pontos", panelAlterar);

        jMenuBar1.setBackground(new java.awt.Color(30, 144, 255));

        inicialMenuInicial.setText("Configurações");

        menuAlterarArquivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuAlterarArquivo.setText("Alterar arquivo de leitura");
        menuAlterarArquivo.setToolTipText("Alterar o arquivo grafo (.txt) que será lido pelo programa");
        menuAlterarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAlterarArquivoActionPerformed(evt);
            }
        });
        inicialMenuInicial.add(menuAlterarArquivo);

        menuAtualizaPaineis.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        menuAtualizaPaineis.setText("Atualizar Painéis");
        menuAtualizaPaineis.setToolTipText("Atualizar todos os painéis do programa");
        menuAtualizaPaineis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAtualizaPaineisActionPerformed(evt);
            }
        });
        inicialMenuInicial.add(menuAtualizaPaineis);

        menuTemaEscuro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        menuTemaEscuro.setText("Tema Escuro");
        menuTemaEscuro.setToolTipText("Habilitar/Desabilitar o tema escuro");
        menuTemaEscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTemaEscuroActionPerformed(evt);
            }
        });
        inicialMenuInicial.add(menuTemaEscuro);

        jMenuBar1.add(inicialMenuInicial);

        inicialMenuSobre.setText("Sobre");
        inicialMenuSobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inicialMenuSobreMouseClicked(evt);
            }
        });
        jMenuBar1.add(inicialMenuSobre);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPaneInicial)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPaneInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("MI Programação");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Metódo que é chamado quando a janela principal é aberta, ou seja, quando
     * o programa é iniciado.
     *
     * @param evt evento disparado pela abertuda da janela principal.
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.removerComboBoxLigacoes2.setEnabled(false);
        this.onOffAbas(-1, false);
        while (true) {
            if (this.controller.criarGrafo(this.arquivoGrafos).equals("Grafo criado com sucesso")) {
                this.onOffAbas(-1, true);
                this.atualizaPaineis();
                this.cadastrarLabelLogInsercao.setText("");
                break;
            } else {
                while (true) {
                    try {
                        JFileChooser janelaSeletora = new JFileChooser();
                        janelaSeletora.setFileFilter(new FileNameExtensionFilter("TEXT FILES", "txt"));
                        janelaSeletora.showDialog(this, "Selecione um novo arquivo");
                        this.arquivoGrafos = janelaSeletora.getSelectedFile().getAbsolutePath();
                        break;
                    } catch (Exception e) {
                        this.cadastrarLabelLogInsercao.setText("Error na seleção do arquivo!");
                    }
                }

            }
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * Cria uma caixa de menssagem com informações sobre o software.
     *
     * @param evt evento disparado.
     */
    private void inicialMenuSobreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inicialMenuSobreMouseClicked
        String msg = "> Componente Curricular: Módulo Integrado de Programação II\n"
                + "Data:  <12/09/2019>\n"
                + "Declaro que este código foi elaborado por nós de forma individual e\n"
                + "não contém nenhum trecho de código de outro colega ou de outro autor, \n"
                + "tais como provindos de livros e apostilas, e páginas ou documentos \n"
                + "eletrônicos da Internet. Qualquer trecho de código de outra autoria que\n"
                + "uma citação para o  não a minha está destacado com  autor e a fonte do\n"
                + "código, e estou ciente que estes trechos não serão considerados para fins\n"
                + "de avaliação. Alguns trechos do código podem coincidir com de outros\n"
                + "colegas pois estes foram discutidos em sessões tutorias."
                + ""
                + "\n\n# Autores:\n"
                + "<Kevin Gomes>\n"
                + "-- GitHub: Goomez"
                + "\n\n"
                + "<Allan Capistrano>\n"
                + "-- GitHub: AllanCapistrano\n"
                + "Código fonte: https://github.com/Goomez/MI-Programacao-Forte-Seguro";

        JOptionPane.showMessageDialog(this, msg);
    }//GEN-LAST:event_inicialMenuSobreMouseClicked

    /**
     * Altera o tema do programa (Tema padrão ou tema escuro).
     *
     * @param evt evento disparado.
     */
    private void menuTemaEscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTemaEscuroActionPerformed
        if (this.menuTemaEscuro.isSelected()) {
            Color temaEscuro = new Color(24, 24, 30, 255);
            Color temaEscuroMapa = new Color(33, 31, 38, 255);
            this.jPanel7.setBackground(temaEscuro);
            this.jPanel8.setBackground(temaEscuro);
            this.jPanel6.setBackground(temaEscuro);
            this.jPanel1.setBackground(temaEscuro);
            this.calcularPainelPrincipal.setBackground(temaEscuroMapa);
            this.cadastrarPanelLigacoesPontos.setBackground(temaEscuro);
            this.calcularTextMenorCaminho.setBackground(temaEscuro);
            this.deletaDesenho();
            this.carregaDesenho();
        } else {
            Color corPadrao = new Color(30, 144, 255);
            Color corPadraoMapa = new Color(135, 206, 250);
            this.jPanel7.setBackground(corPadrao);
            this.jPanel8.setBackground(corPadrao);
            this.jPanel6.setBackground(corPadrao);
            this.jPanel1.setBackground(corPadrao);
            this.calcularPainelPrincipal.setBackground(corPadraoMapa);
            this.cadastrarPanelLigacoesPontos.setBackground(corPadrao);
            this.calcularTextMenorCaminho.setBackground(corPadrao);
            this.deletaDesenho();
            this.carregaDesenho();
        }
    }//GEN-LAST:event_menuTemaEscuroActionPerformed

    /**
     * Altera o vertíce para outro tipo de ponto na aba de "Alterar Pontos".
     *
     * @param evt evento disparado.
     */
    private void alterarButtonAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alterarButtonAlterarMouseClicked
        String ponto = (String) this.alterarComboBoxEscolhaPonto.getSelectedItem();
        int novoTipo = this.alterarComboBoxAlterarPara.getSelectedIndex();
        if (novoTipo == 3) {
            if (!this.controller.existeEstacionamento()) {
                this.controller.alterarTipoCruzamento(ponto, novoTipo);
                this.atualizaPaineis();
                this.alterarLabelLogAlteracao.setText(ponto + " agora é o estacionamento!");
            } else {
                this.controller.getEstacionamento().setId(0);
                this.controller.alterarTipoCruzamento(ponto, novoTipo);
                this.atualizaPaineis();
                this.alterarLabelLogAlteracao.setText("Estacionamento alterado para: " + ponto);
            }
        } else {
            this.controller.alterarTipoCruzamento(ponto, novoTipo);
            this.atualizaPaineis();
            this.alterarLabelLogAlteracao.setText(ponto + " foi alterado!");
        }
    }//GEN-LAST:event_alterarButtonAlterarMouseClicked

    /**
     * Calcula o menor caminho entre os pontos escolhidos pelas combo box na aba
     * de "Calcular Caminho".
     *
     * @param evt evento disparado.
     */
    private void calcularButtonCalcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calcularButtonCalcularMouseClicked
        ///verificar se os pontos escolhidos tem grau maior que 0
        this.calcularTextMenorCaminho.setText("");
        this.calcularTextMenorCaminho.setFont(new Font("Tahoma", Font.PLAIN, 10));
        this.calcularProgressBar.setValue(this.calcularProgressBar.getValue() + 25);
        String caminhoFinal = this.controller.calculaCaminho(((String) this.calcularComboBoxLugarColeta.getSelectedItem()),
                ((String) this.calcularComboBoxBanco.getSelectedItem()));
        this.calcularProgressBar.setValue(this.calcularProgressBar.getValue() + 25);
        this.calcularProgressBar.setValue(this.calcularProgressBar.getValue() + 50);
        this.calcularTextMenorCaminho.setText(caminhoFinal);

    }//GEN-LAST:event_calcularButtonCalcularMouseClicked

    /**
     * Remove o vertíce escolhido na combo box da aba "Remover pontos e/ou
     * ligações".
     *
     * @param evt evento disparado.
     */
    private void removerButtonRemoverPontoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removerButtonRemoverPontoMouseClicked
        String pontoRemover = (String) this.removerComboBoxPontos.getSelectedItem();
        this.controller.removerCruzamento(pontoRemover);
        this.removerLabelLogRemocao.setText(pontoRemover + " foi removido com sucesso!");

        this.atualizaPaineis();
    }//GEN-LAST:event_removerButtonRemoverPontoMouseClicked

    /**
     * Remove a ligação escolhida nas combo boxs da aba "Remover pontos e/ou
     * ligações".
     *
     * @param evt evento disparado.
     */
    private void removerButtonRemoverLigacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removerButtonRemoverLigacaoMouseClicked
        if (((String) this.removerComboBoxLigacoes1.getSelectedItem()).equals("")) {
            this.removerLabelLogRemocao.setText("Por favor, selecione uma ligação!");
        } else if (this.removerComboBoxLigacoes2.getItemCount() == 0) {
            this.removerLabelLogRemocao.setText(((String) this.removerComboBoxLigacoes1.getSelectedItem()) + " não possue ligações!");
        } else {
            this.controller.removerAresta((String) this.removerComboBoxLigacoes1.getSelectedItem(),
                    (String) this.removerComboBoxLigacoes2.getSelectedItem());
            this.controller.removerAresta((String) this.removerComboBoxLigacoes2.getSelectedItem(),
                    (String) this.removerComboBoxLigacoes1.getSelectedItem());
            this.atualizaPaineis();
            this.removerComboBoxLigacoes2.setEnabled(false);
            this.removerLabelLogRemocao.setText("Ligação removida com sucesso!");
        }
    }//GEN-LAST:event_removerButtonRemoverLigacaoMouseClicked

    /**
     * Mostra todas as ligações do vertíce escolhido na combo box selecionada em
     * outra combo box na aba de "Remover pontos e/ou ligações".
     *
     * @param evt evento disparado.
     */
    private void removerComboBoxLigacoes1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_removerComboBoxLigacoes1ItemStateChanged
        if (this.programaPronto) {
            this.removerComboBoxLigacoes2.removeAllItems();
            if (this.removerComboBoxLigacoes1.getSelectedItem().equals("")) {
                this.removerComboBoxLigacoes2.setEnabled(false);
            } else {
                this.removerComboBoxLigacoes2.setEnabled(true);
                String pontoLigacao = (String) this.removerComboBoxLigacoes1.getSelectedItem();
                if (!this.controller.existeLigacoes(pontoLigacao)) {
                    this.removerComboBoxLigacoes2.removeAllItems();
                } else {
                    for (String pontos : this.controller.listaArestasIncidentes(pontoLigacao)) {
                        this.removerComboBoxLigacoes2.addItem(pontos);
                    }
                }
            }
        }
    }//GEN-LAST:event_removerComboBoxLigacoes1ItemStateChanged

    /**
     * Armazena todas as ligações que o usuario inseriu na aba de "Cadastrar".
     *
     * @param evt evento disparado.
     */
    private void cadastrarButtonAdicionarLigacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrarButtonAdicionarLigacaoMouseClicked
        if (this.cadastrarComboBoxLigacoesPonto.getSelectedItem() == "") {
            this.cadastrarLabelLogInsercao.setText("Por favor, selecione um ponto de ligação!");
        } else if ("".equals(this.cadastrarCampoPeso.getText())) {
            this.cadastrarLabelLogInsercao.setText("Por favor, digite um peso!");
        } else {
            try {
                Integer.parseInt(this.cadastrarCampoPeso.getText());
                if (0 > Integer.parseInt(this.cadastrarCampoPeso.getText())) {
                    this.cadastrarLabelLogInsercao.setText("Por favor, insira somente numeros positivos no campo de peso!");
                    this.cadastrarLabelLogInsercao.setText("");
                } else {
                    if (this.listaLigacoes.contains((String) this.cadastrarComboBoxLigacoesPonto.getSelectedItem())) {
                        int pos = 0;
                        String aux = this.listaLigacoes.get(0);
                        while (!aux.equals(this.listaLigacoes.get(pos))) {
                            aux = this.listaLigacoes.get(pos);
                            pos++;
                        }
                        this.pesoLigacoes.set(pos, Integer.parseInt(this.cadastrarCampoPeso.getText()));
                        this.cadastrarCampoPeso.setText("");
                        this.cadastrarComboBoxLigacoesPonto.setSelectedIndex(0);
                        this.cadastrarLabelLogInsercao.setText("Ligação recadastrada com sucesso! Novo peso: " + this.pesoLigacoes.get(pos));
                    } else {
                        this.listaLigacoes.add((String) this.cadastrarComboBoxLigacoesPonto.getSelectedItem());
                        this.pesoLigacoes.add(Integer.parseInt(this.cadastrarCampoPeso.getText()));
                        this.cadastrarCampoPeso.setText("");
                        this.cadastrarComboBoxLigacoesPonto.setSelectedIndex(0);
                        this.cadastrarLabelLogInsercao.setText("Ligação cadastrada com sucesso!");
                    }
                }

            } catch (NumberFormatException e) {
                this.cadastrarLabelLogInsercao.setText("Por favor, insira somente número no campo de peso!");
                this.cadastrarCampoPeso.setText("");
            }
        }
    }//GEN-LAST:event_cadastrarButtonAdicionarLigacaoMouseClicked

    /**
     * Cadastra um novo ponto ao programa, e atualiza todas as abas em seguida.
     *
     * @param evt evento disparado.
     */
    private void cadastrarButtonCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrarButtonCadastrarMouseClicked
        String nomeVertice = this.cadastrarCampoNomeVertice.getText();
        if (nomeVertice.equals("")) {
            this.cadastrarLabelLogInsercao.setText("Por favor, digite um nome para o ponto!");
        } else if (this.controller.existeVertice(nomeVertice)) {
            this.cadastrarLabelLogInsercao.setText("Este ponto já existe, por favor insira um novo!");
        } else if ("".equals(this.cadastrarCampoCoordenadaX.getText()) || "".equals(this.cadastrarCampoCoordenadaY.getText())) {
            this.cadastrarLabelLogInsercao.setText("Por favor, insira as coordenadas!");
        } else {
            try {
                int coordX = Integer.parseInt(this.cadastrarCampoCoordenadaX.getText());
                int coordY = Integer.parseInt(this.cadastrarCampoCoordenadaY.getText());
                this.cadastrarLabelLogInsercao.setText(this.controller.adicionarVertice(nomeVertice, this.cadastrarComboBoxTipoPonto.getSelectedIndex(), coordX, coordY));

                if (!this.listaLigacoes.isEmpty()) {
                    int i = 0;
                    for (String auxLista : this.listaLigacoes) {
                        this.controller.adicionarLigacao(nomeVertice, auxLista, this.pesoLigacoes.get(i));
                        this.controller.adicionarLigacao(auxLista, nomeVertice, this.pesoLigacoes.get(i));

                        i++;
                    }
                }
                this.limpaPainelCadastro();
                this.listaLigacoes.removeAll(this.listaLigacoes);
                this.pesoLigacoes.removeAll(this.pesoLigacoes);
                this.atualizaPaineis();
            } catch (NumberFormatException e) {
                this.cadastrarLabelLogInsercao.setText("Somente número são aceitos como coordenadas!");
                this.cadastrarCampoCoordenadaX.setText("");
                this.cadastrarCampoCoordenadaY.setText("");
            }
        }
    }//GEN-LAST:event_cadastrarButtonCadastrarMouseClicked

    /**
     * Atualiza todas as abas.
     *
     * @param evt
     */
    private void menuAtualizaPaineisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAtualizaPaineisActionPerformed
        this.atualizaPaineis();
    }//GEN-LAST:event_menuAtualizaPaineisActionPerformed

    /**
     * Abre um seletor de arquivos para o usuario escolher um novo arquivo de
     * leitura.
     *
     * @param evt evento disparado.
     */
    private void menuAlterarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAlterarArquivoActionPerformed
        String backupArquivo = this.arquivoGrafos;
        try {
            JFileChooser janelaSeletora = new JFileChooser();
            janelaSeletora.setFileFilter(new FileNameExtensionFilter("TEXT FILES", "txt"));
            janelaSeletora.showDialog(this, "Selecione um novo arquivo");

            this.arquivoGrafos = janelaSeletora.getSelectedFile().getAbsolutePath();
            if (this.controller.criarNovoGrafo(this.arquivoGrafos).equals("Grafo criado com sucesso")) {
                this.cadastrarLabelLogInsercao.setText("Arquivo inserido com sucesso");
                this.atualizaPaineis();
            } else {
                this.arquivoGrafos = backupArquivo;
            }
        } catch (Exception e) {
            this.cadastrarLabelLogInsercao.setText("Arquivo inválido!");
            this.arquivoGrafos = backupArquivo;
        }
    }//GEN-LAST:event_menuAlterarArquivoActionPerformed

    /**
     * Desabilita e habilita as abas da janela principal.
     *
     * @param aba número da aba que será desabilitada/habilitada. Caso seja -1,
     * a modificação será feita para todas.
     * @param onOff true, para habilitar a aba, false, para desabilitar a aba.
     */
    public void onOffAbas(int aba, boolean onOff) {
        if (aba == -1) {
            this.tabbedPaneInicial.setEnabledAt(0, onOff);
            this.tabbedPaneInicial.setEnabledAt(1, onOff);
            this.tabbedPaneInicial.setEnabledAt(2, onOff);
            this.tabbedPaneInicial.setEnabledAt(3, onOff);
            return;
        }
        this.tabbedPaneInicial.setEnabledAt(aba, onOff);
    }

    /**
     * Limpa todos os campos de texto da aba "Cadastrar".
     */
    public void limpaPainelCadastro() {
        this.cadastrarCampoCoordenadaX.setText("");
        this.cadastrarCampoCoordenadaY.setText("");
        this.cadastrarCampoNomeVertice.setText("");
        this.cadastrarCampoPeso.setText("");
        if (!this.controller.existePontos()) {
            this.cadastrarComboBoxLigacoesPonto.setEnabled(false);
            this.cadastrarCampoPeso.setEnabled(false);
            this.cadastrarButtonAdicionarLigacao.setEnabled(false);
        } else {
            this.cadastrarComboBoxLigacoesPonto.setEnabled(true);
            this.cadastrarCampoPeso.setEnabled(true);
            this.cadastrarButtonAdicionarLigacao.setEnabled(true);
        }
    }

    /**
     * Limpa todas as combo box da aba "Remover pontos/ligações".
     */
    public void limpaPainelRemove() {
        if (!this.nenhumPonto) {
            this.removerComboBoxPontos.setSelectedIndex(0);
            this.removerComboBoxLigacoes1.setSelectedIndex(0);
        }
    }

    /**
     * Limpa todas as combo box da aba "Alterar pontos".
     */
    public void limpaPainelAltera() {
        if (!this.nenhumPonto) {
            this.alterarComboBoxAlterarPara.setSelectedIndex(0);
            this.alterarComboBoxEscolhaPonto.setSelectedIndex(0);
        }
    }

    /**
     * Carrega o desenho (os pontos e nomes dos pontos) do painel da aba
     * "Calcula caminho".
     */
    public void carregaDesenho() {
        //Bancos
        if (this.controller.existeBanco()) {
            for (String nomes : this.controller.getNomesVertices(1)) {
                JLabel ponto = new JLabel();
                ponto.setText(nomes);

                if (this.menuTemaEscuro.isSelected()) {
                    Color color = new Color(220, 220, 220);
                    ponto.setForeground(color);
                }
                ponto.setFont(new java.awt.Font("Tahoma", 0, 10));

                ponto.setIcon(new javax.swing.ImageIcon(getClass()
                        .getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_roxo.png")));

                ponto.setHorizontalTextPosition(SwingConstants.CENTER);
                ponto.setVerticalTextPosition(SwingConstants.BOTTOM);
                ponto.setBounds(this.controller.getPonto(nomes).getPosX(),
                        this.controller.getPonto(nomes).getPosY(), 100, 100);
                this.calcularPainelPrincipal.add(ponto);
            }
        }

        //Pontos de Coleta
        if (this.controller.existeColeta()) {
            for (String nomes : this.controller.getNomesVertices(2)) {
                JLabel ponto = new JLabel();
                ponto.setText(nomes);

                if (this.menuTemaEscuro.isSelected()) {
                    Color color = new Color(220, 220, 220);
                    ponto.setForeground(color);
                }
                ponto.setFont(new java.awt.Font("Tahoma", 0, 10));

                ponto.setIcon(new javax.swing.ImageIcon(getClass()
                        .getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_vermelho.png")));

                ponto.setHorizontalTextPosition(SwingConstants.CENTER);
                ponto.setVerticalTextPosition(SwingConstants.BOTTOM);
                ponto.setBounds(this.controller.getPonto(nomes).getPosX(),
                        this.controller.getPonto(nomes).getPosY(), 100, 100);
                this.calcularPainelPrincipal.add(ponto);
            }
        }

        //Cruzamentos
        if (this.controller.existeCruzamento()) {
            for (String nomes : this.controller.getNomesVertices(0)) {
                JLabel ponto = new JLabel();
                ponto.setText(nomes);

                if (this.menuTemaEscuro.isSelected()) {
                    Color color = new Color(220, 220, 220);
                    ponto.setForeground(color);
                }
                ponto.setFont(new java.awt.Font("Tahoma", 0, 10));

                ponto.setIcon(new javax.swing.ImageIcon(getClass()
                        .getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_branco.png")));

                ponto.setHorizontalTextPosition(SwingConstants.CENTER);
                ponto.setVerticalTextPosition(SwingConstants.BOTTOM);
                ponto.setBounds(this.controller.getPonto(nomes).getPosX(),
                        this.controller.getPonto(nomes).getPosY(), 100, 100);
                this.calcularPainelPrincipal.add(ponto);
            }
        }

        //Estacionamento
        if (this.controller.existeEstacionamento()) {
            JLabel ponto = new JLabel();
            ponto.setText(this.controller.getEstacionamento().getObj());

            if (this.menuTemaEscuro.isSelected()) {
                Color color = new Color(220, 220, 220);
                ponto.setForeground(color);
            }
            ponto.setFont(new java.awt.Font("Tahoma", 0, 10));

            ponto.setIcon(new javax.swing.ImageIcon(getClass()
                    .getResource("/br/uefs/ecomp/forteseguro/view/ponto_vertice_preto.png")));

            ponto.setHorizontalTextPosition(SwingConstants.CENTER);
            ponto.setVerticalTextPosition(SwingConstants.BOTTOM);
            ponto.setBounds(this.controller.getEstacionamento().getPosX(),
                    this.controller.getEstacionamento().getPosY(), 100, 100);
            this.calcularPainelPrincipal.add(ponto);
        }

    }

    /**
     * Deleta o desenho do painel da aba de "Calcula caminho".
     */
    public void deletaDesenho() {
        this.calcularPainelPrincipal.removeAll();
    }

    /**
     * Atualiza todas as abas da janela principal.
     */
    public void atualizaPaineis() {
        this.programaPronto = false;

        this.atualizaCalcula();
        this.atualizaRemove();
        this.atualizaAlterar();
        this.atualizaCadastro();
        this.situacaoEstacionamento();
        this.situacaoBanco();
        this.situacaoColeta();
        this.situacaoPontos();

        this.programaPronto = true;
    }

    /**
     * Trata os possíveis erros que podem acontecer caso não tenha um
     * estacionamento cadastrado.
     */
    public void situacaoEstacionamento() {
        if (!this.controller.existeEstacionamento()) {
            if (!this.situacaoEstacionamento) {
                JOptionPane.showMessageDialog(new JTextField(""), "Atenção! O estacionamento foi removido/alterado.\n"
                        + "Para calcular uma nova rota, por favor, cadastre um novo\n"
                        + "estacionamento ou altere um ponto já existente para estacionamento!");
                this.cadastrarComboBoxTipoPonto.addItem("Estacionamento");
                this.situacaoEstacionamento = true;
            }
        } else if ("Estacionamento".equals(this.cadastrarComboBoxTipoPonto.getItemAt(3))) {
            this.cadastrarComboBoxTipoPonto.removeItemAt(3);
            this.situacaoEstacionamento = false;
        }
    }

    /**
     * Trata os possíveis erros que podem acontecer caso não tenha pelo menos um
     * banco cadastrado.
     */
    public void situacaoBanco() {
        if (!this.controller.existeBanco()) {
            if (!this.situacaoBanco) {
                JOptionPane.showMessageDialog(new JTextField(""), "Atenção! Não existe bancos cadastrados.\n"
                        + "Para calcular uma nova rota, por favor, cadastre um novo\n"
                        + "banco ou altere um ponto já existente!");
                this.situacaoBanco = true;
            }

        } else if (this.situacaoBanco) {
            this.situacaoBanco = false;
        }
    }

    /**
     * Trata os possíveis erros que podem acontecer caso não tenha pelo menos um
     * ponto de coleta cadastrado.
     */
    public void situacaoColeta() {
        if (!this.controller.existeColeta()) {
            if (!this.situacaoColeta) {
                JOptionPane.showMessageDialog(new JTextField(""), "Atenção! Não existe pontos de coleta cadastrados.\n"
                        + "Para calcular uma nova rota, por favor, cadastre um novo\n"
                        + "ponto de coleta ou altere um ponto já existente!");
                this.situacaoColeta = true;
            }

        } else if (this.situacaoColeta) {
            this.situacaoColeta = false;
        }
    }

    /**
     * Trata os possíveis erros que podem acontecer caso não tenha nenhum ponto
     * cadastrado.
     */
    public void situacaoPontos() {
        if (!this.controller.existePontos()) {
            if (!this.nenhumPonto) {
                JOptionPane.showMessageDialog(new JTextField(""), "Atenção! Não existe pontos cadastrados.\n"
                        + "Para continuar usando o programa, por favor, cadastre novos pontos\n"
                        + "ou insira um novo arquivo de leitura (ctrl + N)!");
                this.tabbedPaneInicial.setSelectedIndex(0);
                this.onOffAbas(1, false);
                this.onOffAbas(3, false);
                this.nenhumPonto = true;
            }
        } else if (this.nenhumPonto) {
            this.onOffAbas(1, true);
            this.onOffAbas(3, true);
            this.nenhumPonto = false;
        }
    }

    /**
     * Atualiza a combo box que lista todos os vertíces disponíveis para fazer
     * ligações.
     */
    private void atualizaCadastro() {
        this.limpaPainelCadastro();
        this.cadastrarComboBoxLigacoesPonto.removeAllItems();
        for (String nomes : this.controller.getNomesVertices(-1)) {
            this.cadastrarComboBoxLigacoesPonto.addItem(nomes);
        }
    }

    /**
     * Atualiza as combo box da aba "Remover ponto".
     */
    private void atualizaRemove() {
        this.limpaPainelRemove();
        this.removerComboBoxPontos.removeAllItems();
        this.removerComboBoxLigacoes1.removeAllItems();
        this.removerComboBoxLigacoes2.removeAllItems();
        this.removerComboBoxLigacoes1.addItem("");
        for (String nomes : this.controller.getNomesVertices(-1)) {
            this.removerComboBoxPontos.addItem(nomes);
            this.removerComboBoxLigacoes1.addItem(nomes);
        }
    }

    /**
     * Atualiza as combo box da aba "Calcula caminho" e carrega o desenho do
     * painel.
     */
    private void atualizaCalcula() {
        this.deletaDesenho();
        this.calcularComboBoxBanco.removeAllItems();
        this.calcularComboBoxLugarColeta.removeAllItems();
        this.calcularProgressBar.setValue(0);

        if (this.controller.existeBanco() && this.controller.existeColeta()
                && this.controller.existeEstacionamento()) {
            this.onOffAbas(2, true);
        } else {
            this.onOffAbas(2, false);
            return;
        }

        for (String nomes : this.controller.getNomesVertices(1)) {
            this.calcularComboBoxBanco.addItem(nomes);
        }
        for (String nomes : this.controller.getNomesVertices(2)) {
            this.calcularComboBoxLugarColeta.addItem(nomes);
        }
        if (this.controller.existeEstacionamento()) {
            this.calculaLabelEstacionamento.setText(this.controller.getEstacionamento().getObj());
        }
        this.carregaDesenho();
    }

    /**
     * Atualiza a combo box da aba "Alterar ponto".
     */
    private void atualizaAlterar() {
        this.limpaPainelAltera();
        this.alterarComboBoxEscolhaPonto.removeAllItems();
        for (String nomes : this.controller.getNomesVertices(-1)) {
            this.alterarComboBoxEscolhaPonto.addItem(nomes);
        }
    }

    /**
     * Metódo principal da classe.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainSwing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton alterarButtonAlterar;
    private javax.swing.JComboBox<String> alterarComboBoxAlterarPara;
    private javax.swing.JComboBox<String> alterarComboBoxEscolhaPonto;
    private javax.swing.JLabel alterarLabelLogAlteracao;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JToggleButton cadastrarButtonAdicionarLigacao;
    private javax.swing.JButton cadastrarButtonCadastrar;
    private javax.swing.JTextField cadastrarCampoCoordenadaX;
    private javax.swing.JTextField cadastrarCampoCoordenadaY;
    private javax.swing.JTextField cadastrarCampoNomeVertice;
    private javax.swing.JTextField cadastrarCampoPeso;
    private javax.swing.JComboBox<String> cadastrarComboBoxLigacoesPonto;
    private javax.swing.JComboBox<String> cadastrarComboBoxTipoPonto;
    private javax.swing.JLabel cadastrarLabelLogInsercao;
    private javax.swing.JLabel cadastrarLabelNomeVertice;
    private javax.swing.JLabel cadastrarLabelPrincipal;
    private javax.swing.JPanel cadastrarPanelLigacoesPontos;
    private javax.swing.JLabel calculaLabelEstacionamento;
    private javax.swing.JButton calcularButtonCalcular;
    private javax.swing.JComboBox<String> calcularComboBoxBanco;
    private javax.swing.JComboBox<String> calcularComboBoxLugarColeta;
    private javax.swing.JPanel calcularPainelPrincipal;
    private javax.swing.JProgressBar calcularProgressBar;
    private javax.swing.JTextArea calcularTextMenorCaminho;
    private javax.swing.JMenu inicialMenuInicial;
    private javax.swing.JMenu inicialMenuSobre;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem menuAlterarArquivo;
    private javax.swing.JMenuItem menuAtualizaPaineis;
    private javax.swing.JCheckBoxMenuItem menuTemaEscuro;
    private javax.swing.JPanel panelAlterar;
    private javax.swing.JPanel panelCadastrar;
    private javax.swing.JPanel panelCalcular;
    private javax.swing.JPanel panelRemover;
    private javax.swing.JButton removerButtonRemoverLigacao;
    private javax.swing.JButton removerButtonRemoverPonto;
    private javax.swing.JComboBox<String> removerComboBoxLigacoes1;
    private javax.swing.JComboBox<String> removerComboBoxLigacoes2;
    private javax.swing.JComboBox<String> removerComboBoxPontos;
    private javax.swing.JLabel removerLabelLogRemocao;
    private javax.swing.JTabbedPane tabbedPaneInicial;
    // End of variables declaration//GEN-END:variables
}
